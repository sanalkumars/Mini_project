<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css ">
</head>
<style>
     body {
            font-family: Arial, sans-serif;
            background-color:antiquewhite;
            margin: 0;
            padding: 0;
            text-align: center;
        }
        .otp-container {
            background-color: white;
            border: 1px solid #ccc;
            border-radius: 10px;
           
            width: 300px;
            margin: 50px auto;
            padding: 20px;
        }
        h3 {
            font-size: 24px;
            color: #333;
        }
        h2 {
            font-size: 20px;
            color: #333;
            margin-bottom: 20px;
        }
        label {
            font-weight: bold;
        }
        .form-group {
            margin: 10px 0;
        }
        input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 0 auto;
        }
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }
        .btn-secondary {
            background-color: #6c757d;
            color: #fff;
        }
        #message {
            color: #ff0000;
        }
        #otp{
            width: 80px;
        }
</style>
<body>
<h3 style="margin-top: 5%;">Enter the OTP </h3>
<div class="otp-container ">
    <h2>Verify OTP</h2>
    <form action="/verifyOTP" method="post" onsubmit="return validateOTP()">
        <div class="form-group">
            <label for="otp">Enter OTP</label>
            <p id="message" class="text-danger"><%= locals.msg %></p>
            <input type="text" id="otp" name="otp" required>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit OTP</button>
        </div>
    </form>
    <div class="form-group">
        <button type="submit" id="resendOTP" class="btn btn-secondary" disabled>Resend OTP</button>
        <p id="countdown"></p>
    </div>
</div>





<script>
    // Function to start the countdown timer
    function startCountdown() {
        let countdown = 60;
        const countdownDisplay = document.getElementById('countdown');
        const resendButton = document.getElementById('resendOTP');

        function updateCountdown() {
            const minutes = Math.floor(countdown / 60).toString().padStart(2, '0');
            const seconds = (countdown % 60).toString().padStart(2, '0');
            countdownDisplay.textContent = `${minutes}:${seconds}`;
        }

        function stopCountdown() {
            clearInterval(timer);
            countdownDisplay.textContent = "";
        }

        function decrementCountdown() {
            countdown--;
            updateCountdown();
            if (countdown === 0) {
                stopCountdown();
                // Enable the resend button
                resendButton.disabled = false;
                resendButton.classList.remove('btn-secondary');
                resendButton.classList.add('btn-primary');
            }
        }

        updateCountdown();
        const timer = setInterval(decrementCountdown, 1000);

        return {
            stop: stopCountdown
        };
    }

    function validateOTP() {
        const otpInput = document.getElementById("otp");
        const message = document.getElementById("message");
        const resendButton = document.getElementById("resendOTP");

        const otpValue = otpInput.value;

        if (!otpValue.match(/^\d+$/)) {
            message.innerText = "OTP must contain only numeric characters.";
            return false;
        } else {
            // Assuming the backend endpoint for OTP verification is '/verifyOTP'
            fetch('/verifyOTP', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ otp: otpValue }),
            })
            .then((res) => res.json())
            .then((data) => {
                if (data.isValid) {
                    message.innerText = "";
                    // Redirect to home page if the OTP is valid
                    window.location.href = "/";
                } else {
                    message.innerText = "Invalid OTP. Please try again";
                    // Stop the countdown timer
                    countdownTimer.stop();
                    // Enable the resend button
                    resendButton.disabled = false;
                    resendButton.classList.remove('btn-secondary');
                    resendButton.classList.add('btn-primary');
                }
            })
            .catch((err) => {
                message.innerText = "An error occurred.";
            });

            // Always return false to prevent form submission
            return false;
        }
    }

    document.getElementById('resendOTP').addEventListener('click', function() {
        const generatedOTP = Math.floor(1000 + Math.random() * 900000);
        console.log(`Generated OTP: ${generatedOTP}`);

        // Start the countdown timer
        countdownTimer = startCountdown();

        this.disabled = true;
        this.classList.remove('btn-primary');
        this.classList.add('btn-secondary');

        fetch('/resendOTP', { method: "POST" })
            .then(res => res.json())
            .then(data => {
                document.getElementById("message").innerText = data.msg;
            }).catch(err => {
                document.getElementById("message").innerText = "An error occurred.";
            });
    });

    // Start the initial countdown when the page loads
    let countdownTimer = startCountdown();
</script>


</body>
</html>